$date
	Sat Oct  5 11:33:00 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 1 ! carry_out $end
$var wire 8 " Y [7:0] $end
$var reg 8 # A [7:0] $end
$var reg 8 $ B [7:0] $end
$var reg 1 % carry_in $end
$scope module adder $end
$var wire 8 & A [7:0] $end
$var wire 8 ' B [7:0] $end
$var wire 1 % carry_in $end
$var wire 1 ! carry_out $end
$var wire 8 ( carry [7:0] $end
$var wire 8 ) Y [7:0] $end
$scope module add0 $end
$var wire 1 * A $end
$var wire 1 + B $end
$var wire 1 % C $end
$var wire 1 , C1 $end
$var wire 1 - Y $end
$upscope $end
$scope module add1 $end
$var wire 1 . A $end
$var wire 1 / B $end
$var wire 1 0 C $end
$var wire 1 1 C1 $end
$var wire 1 2 Y $end
$upscope $end
$scope module add2 $end
$var wire 1 3 A $end
$var wire 1 4 B $end
$var wire 1 5 C $end
$var wire 1 6 C1 $end
$var wire 1 7 Y $end
$upscope $end
$scope module add3 $end
$var wire 1 8 A $end
$var wire 1 9 B $end
$var wire 1 : C $end
$var wire 1 ; C1 $end
$var wire 1 < Y $end
$upscope $end
$scope module add4 $end
$var wire 1 = A $end
$var wire 1 > B $end
$var wire 1 ? C $end
$var wire 1 @ C1 $end
$var wire 1 A Y $end
$upscope $end
$scope module add5 $end
$var wire 1 B A $end
$var wire 1 C B $end
$var wire 1 D C $end
$var wire 1 E C1 $end
$var wire 1 F Y $end
$upscope $end
$scope module add6 $end
$var wire 1 G A $end
$var wire 1 H B $end
$var wire 1 I C $end
$var wire 1 J C1 $end
$var wire 1 K Y $end
$upscope $end
$scope module add7 $end
$var wire 1 L A $end
$var wire 1 M B $end
$var wire 1 N C $end
$var wire 1 O C1 $end
$var wire 1 P Y $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
1P
0O
1N
0M
0L
0K
1J
1I
0H
1G
0F
1E
1D
1C
0B
0A
1@
1?
0>
1=
1<
1;
1:
19
18
07
16
05
14
13
12
01
00
0/
1.
0-
0,
0+
0*
b10001010 )
b1111100 (
b101100 '
b1011110 &
0%
b101100 $
b1011110 #
b10001010 "
0!
$end
#5
1A
0?
0;
0I
0E
1F
0:
1<
0K
06
17
0D
1!
0@
b11000000 (
1O
b10111111 "
b10111111 )
1-
09
1>
0C
1H
1M
03
0=
1B
1L
1%
b11010100 $
b11010100 '
b11101010 #
b11101010 &
#10
