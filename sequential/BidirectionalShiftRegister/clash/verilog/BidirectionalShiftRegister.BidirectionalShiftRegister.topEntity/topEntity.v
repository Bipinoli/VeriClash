/* AUTOMATICALLY GENERATED VERILOG-2001 SOURCE CODE.
** GENERATED BY CLASH 1.6.4. DO NOT MODIFY.
*/
`timescale 100fs/100fs
module topEntity
    ( // Inputs
      input  eta // clock
    , input  eta1 // reset
    , input  eta2 // enable
    , input  c$arg_0
    , input  c$arg_1
    , input [7:0] c$arg_2

      // Outputs
    , output wire [7:0] result
    );
  // BidirectionalShiftRegister.hs:20:1-108
  reg [7:0] c$ds_app_arg = 8'b00000000;
  wire [15:0] result_1;
  // BidirectionalShiftRegister.hs:11:1-7
  wire [15:0] ds1;
  // BidirectionalShiftRegister.hs:11:1-7
  wire [7:0] datain;
  // BidirectionalShiftRegister.hs:11:1-7
  wire [15:0] c$ds1_case_alt;
  // BidirectionalShiftRegister.hs:11:1-7
  wire [15:0] c$ds1_case_alt_0;
  // BidirectionalShiftRegister.hs:11:1-7
  wire  load;
  // BidirectionalShiftRegister.hs:11:1-7
  wire [15:0] c$ds1_case_alt_1;
  // BidirectionalShiftRegister.hs:11:1-7
  wire [7:0] c$ds1_app_arg;
  // BidirectionalShiftRegister.hs:11:1-7
  wire  shiftLeft;
  // BidirectionalShiftRegister.hs:11:1-7
  wire [7:0] c$ds1_app_arg_0;
  wire [9:0] c$arg;

  assign c$arg = {c$arg_0,   c$arg_1,
                  c$arg_2};

  // register begin
  always @(posedge eta or  posedge  eta1) begin : c$ds_app_arg_register
    if ( eta1) begin
      c$ds_app_arg <= 8'b00000000;
    end else if (eta2) begin
      c$ds_app_arg <= result_1[15:8];
    end
  end
  // register end

  assign result = result_1[7:0];

  assign result_1 = {ds1[15:8],   ds1[7:0]};

  assign ds1 = (load == 1'b1) ? {datain,
                                 datain} : c$ds1_case_alt;

  assign datain = c$arg[7:0];

  assign c$ds1_case_alt = (load == 1'b0) ? c$ds1_case_alt_0 : ({16 {1'bx}});

  assign c$ds1_case_alt_0 = (shiftLeft == 1'b1) ? {c$ds1_app_arg,
                                                   c$ds1_app_arg} : c$ds1_case_alt_1;

  assign load = c$arg[9:9];

  assign c$ds1_case_alt_1 = (shiftLeft == 1'b0) ? {c$ds1_app_arg_0,
                                                   c$ds1_app_arg_0} : ({16 {1'bx}});

  assign c$ds1_app_arg = c$ds_app_arg << 64'sd1;

  assign shiftLeft = c$arg[8:8];

  assign c$ds1_app_arg_0 = c$ds_app_arg >> 64'sd1;


endmodule

